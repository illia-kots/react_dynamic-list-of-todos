{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Filter.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","filterTypes","TodoFilter","filterType","setFilterType","query","onChangeQuery","value","onChange","event","target","selectedItem","placeholder","e","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterType","TodoModal","closeTodo","useState","user","setUserId","handleUsers","a","userId","currentUser","useEffect","href","email","name","App","setTodos","setSelectedTodo","ALL","setQuery","visibleTodos","initialTodos","lowerQuery","toLowerCase","trim","filter","searchedTodo","includes","ACTIVE","visibleTodo","COMPLETED","handleFilteringTodos","handleTodos","currentTodo","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b6601e6.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: (todoId: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    selectTodo,\n    selectedTodo,\n  },\n) => {\n  return (\n    <table className=\"\n      table\n      is-narrow\n      is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodo?.id === todo.id ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterType } from '../../types/Filter';\n\ntype Props = {\n  filterType: FilterType,\n  setFilterType: (filterType: FilterType) => void,\n  query: string,\n  onChangeQuery: (query: string) => void,\n};\n\nconst filterTypes = ['all', 'active', 'completed'];\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    filterType,\n    setFilterType,\n    query,\n    onChangeQuery,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={(event) => {\n              setFilterType(event.target.value as FilterType);\n            }}\n          >\n            {filterTypes.map(selectedItem => (\n              <option\n                value={selectedItem}\n                key={selectedItem}\n              >\n                {selectedItem}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"\n        control\n        is-expanded\n        has-icons-left\n        has-icons-right\"\n      >\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => onChangeQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChangeQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterType {\n  ALL = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  closeTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, closeTodo }) => {\n  const [user, setUserId] = useState<User | null>(null);\n\n  const handleUsers = async () => {\n    const currentUser = await getUser(selectedTodo?.userId || 0);\n\n    setUserId(currentUser);\n  };\n\n  useEffect(() => {\n    handleUsers();\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterType } from './types/Filter';\n\nconst handleFilteringTodos = (todos: Todo[], query: string, filterType: FilterType) => {\n  let initialTodos = [...todos];\n\n  if (query) {\n    const lowerQuery = query.toLowerCase().trim();\n\n    initialTodos = initialTodos.filter(searchedTodo => (\n      searchedTodo.title.toLowerCase().includes(lowerQuery)\n    ));\n  }\n\n  switch (filterType) {\n    case FilterType.ACTIVE:\n      initialTodos = initialTodos.filter(visibleTodo => !visibleTodo.completed);\n      break;\n    case FilterType.COMPLETED:\n      initialTodos = initialTodos.filter(visibleTodo => visibleTodo.completed);\n      break;\n    case FilterType.ALL:\n    default:\n      break;\n  }\n\n  return initialTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterType, setFilterType] = useState<FilterType>(FilterType.ALL);\n  const [query, setQuery] = useState('');\n  const visibleTodos = handleFilteringTodos(todos, query, filterType);\n\n  const handleTodos = async () => {\n    const currentTodo = await getTodos();\n\n    setTodos(currentTodo);\n  };\n\n  useEffect(() => {\n    handleTodos();\n  });\n\n  const closeTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterType={filterType}\n                setFilterType={setFilterType}\n                query={query}\n                onChangeQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    selectTodo={(todoId: Todo) => {\n                      setSelectedTodo(todoId);\n                    }}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          closeTodo={closeTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}